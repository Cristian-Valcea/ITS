# .github/workflows/risk_system_tests.yml
name: Risk System Tests with Latency Benchmarks

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/risk/**'
      - 'tests/test_risk_*'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/risk/**'
      - 'tests/test_risk_*'

jobs:
  risk-calculator-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-benchmark numpy pandas psutil
        pip install -r requirements.txt
    
    - name: Run Risk Calculator Tests with Latency Benchmarks
      run: |
        pytest tests/test_risk_calculators.py -v -s --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Generate Latency Report
      run: |
        pytest tests/test_risk_calculators.py --tb=no -q > latency_report_calculators.txt 2>&1 || true
        echo "## Calculator Latency Benchmarks" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        grep -E "(Latency|Âµs)" latency_report_calculators.txt >> $GITHUB_STEP_SUMMARY || echo "No latency data found" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

  risk-integration-tests:
    runs-on: ubuntu-latest
    needs: risk-calculator-tests
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-benchmark numpy pandas psutil
        pip install -r requirements.txt
    
    - name: Run Integration Tests with End-to-End Latency
      run: |
        pytest tests/test_risk_integration.py -v -s --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Generate Integration Report
      run: |
        pytest tests/test_risk_integration.py --tb=no -q > latency_report_integration.txt 2>&1 || true
        echo "## Integration Test Latency Benchmarks" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        grep -E "(latency|Âµs|events/sec)" latency_report_integration.txt >> $GITHUB_STEP_SUMMARY || echo "No integration data found" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

  performance-regression-check:
    runs-on: ubuntu-latest
    needs: [risk-calculator-tests, risk-integration-tests]
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Need previous commit for comparison
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-benchmark numpy pandas psutil
        pip install -r requirements.txt
    
    - name: Run Performance Regression Tests
      run: |
        # Run current version
        pytest tests/test_risk_calculators.py::TestCalculatorPerformance -v --tb=no -q > current_perf.txt 2>&1 || true
        
        # Extract key metrics
        echo "## Performance Regression Check" >> $GITHUB_STEP_SUMMARY
        echo "### Current Performance" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        grep -E "(Latency|Memory usage)" current_perf.txt >> $GITHUB_STEP_SUMMARY || echo "No performance data" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        
        # Check for performance regressions (basic thresholds)
        python .github/scripts/check_performance.py
      env:
        PYTHONPATH: ${{ github.workspace }}

  golden-file-validation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio numpy pandas
        pip install -r requirements.txt
    
    - name: Validate Golden File Tests
      run: |
        # Run only golden file tests
        pytest tests/test_risk_calculators.py -k "golden" -v --tb=short
        pytest tests/test_risk_integration.py -k "golden" -v --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Generate Golden File Report
      run: |
        echo "## Golden File Test Results" >> $GITHUB_STEP_SUMMARY
        echo "Golden file tests validate expected behavior against known scenarios:" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Simple decline scenarios" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Recovery scenarios" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Volatile market scenarios" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Market crash simulations" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Normal trading day validations" >> $GITHUB_STEP_SUMMARY

  latency-slo-monitoring:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio numpy pandas
        pip install -r requirements.txt
    
    - name: Run Latency SLO Tests
      run: |
        python .github/scripts/slo_test.py
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Generate SLO Report
      run: |
        echo "## Latency SLO Monitoring" >> $GITHUB_STEP_SUMMARY
        echo "Service Level Objectives for risk system components:" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸŽ¯ DrawdownCalculator: P95 < 150Âµs" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸŽ¯ TurnoverCalculator: P95 < 100Âµs" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸŽ¯ Event Bus: P95 < 200Âµs" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸŽ¯ Rules Engine: P95 < 100Âµs" >> $GITHUB_STEP_SUMMARY